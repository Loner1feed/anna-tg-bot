import { callbacks } from "../config/callbacks.js";
import { photos } from "../config/photos.js";
import { videos } from "../config/videos.js";
import { showPsychoLessonsKeyboard } from "../keyboards/inline.js";
import { checkGroup } from "../utils/checkGroup.js";
import { sendAdvert } from "../utils/sendAdvert.js";
import { nextStep, startSequence } from "../utils/sequenceHandler.js";
import { startLesson } from "../utils/startLesson.js";
import { completedBefore, sendTestQuestion } from "../utils/testHandler.js";

export default async (ctx) => {
  const data = ctx.callbackQuery.data;

  switch (data) {
    // prod
    case callbacks.check_group:
      checkGroup(ctx);
      break;

    case callbacks.get_greeting:
      await ctx.answerCbQuery("");
      await startSequence(ctx, "greeting")
      break;

    case callbacks.get_course_info:
      await startSequence(ctx, "course_info");
      break;

    case callbacks.next_step:
      await ctx.answerCbQuery('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º...');
      await nextStep(ctx);
      break;

    case callbacks.start_test:
      await completedBefore(ctx);
      break;

    case callbacks.start_lesson:
      await startLesson(ctx);
      break;

    case callbacks.receive_gift:
      await ctx.answerCbQuery('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º...');
      await ctx.reply("–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –ø—Ä–æ–±–Ω—ã–π —É—Ä–æ–∫! –ö–∞–∫ –∏ –æ–±–µ—â–∞–ª–∞, –≤—ã—Å—ã–ª–∞—é –≤–∞–º —Å–≤–æ–π –∞–≤—Ç–æ—Ä—Å–∫–∏–π —Ä–µ—Ü–µ–ø—Ç:");
      await ctx.replyWithVideo(videos.giftLessonVideo);
      await ctx.replyWithMediaGroup([
        { type: "photo", media: photos.redwardLessonTechSheet1, caption: "–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –¥–ª—è –Ω–∞—á–∏–Ω–∫–∏ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª—é–±—ã–µ —è–≥–æ–¥—ã." },
        { type: "photo", media: photos.redwardLessonTechSheet2 },
      ]);

      await ctx.reply(`–ü—Ä–µ–¥–ª–∞–≥–∞—é –≤–∞–º –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ—Ä–æ—Ç–∫–æ–µ –≤–∏–¥–µ–æ –ø—Ä–æ –Ω–∞—à –æ—Å–Ω–æ–≤–Ω–æ–π –∫—É—Ä—Å "–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∫–æ–Ω–¥–∏—Ç–µ—Ä."`);
      await ctx.replyWithVideo(videos.overallCourseInfo);

      await ctx.reply("–ü—Ä–æ–π–¥–∏—Ç–µ —É—Ä–æ–∫–∏ –æ—Ç –ø—Å–∏—Ö–æ–ª–æ–≥–∞, –∫–æ—Ç–æ—Ä—ã–µ –≤–∞–º –ø—Ä–∏–≥–æ–¥—è—Ç—Å—è –≤ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –≤–∞—à–∏—Ö —Ü–µ–ª–µ–π –∏ –º–µ—á—Ç üå∫", {
        reply_markup: { inline_keyboard: showPsychoLessonsKeyboard }
      })
      break;

    case callbacks.get_psycho_lessons:
      await startSequence(ctx, "psycho_lessons");
      break;

    // test and etc.
    case callbacks.start_sequence:
      await startSequence(ctx, "test");
      break;

    default:
      break;
  }
}