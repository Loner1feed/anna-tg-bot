export async function sendMessage(ctx, message) {
  try {
    if (typeof message === 'string') {
      await ctx.reply(message);
    } else if (message.type === 'video_note') {
      await ctx.replyWithVideoNote(message.file_id);
    } else if (message.type === 'video') {
      await ctx.replyWithVideo(message.file_id);
    } else if (message.type === 'photo') {
      await ctx.replyWithPhoto(message.file_id);
    } else if (message.type === 'voice') {
      await ctx.replyWithVoice(message.file_id);
    } else {
      await ctx.reply(message.text, { parse_mode: message.parse_mode });
    }
  } catch (error) {
    if (error.response && error.response.error_code === 400) {
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –≤–∏–¥–µ–æ—Å–æ–æ–±—â–µ–Ω–∏—è
      await ctx.reply("üö´ –¢—É—Ç –¥–æ–ª–∂–Ω–æ –±—ã–ª–æ –±—ã—Ç—å –≤–∏–¥–µ–æ—Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–æ –æ–Ω–æ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram")
    } else {
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫
      console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
    }
  }
}